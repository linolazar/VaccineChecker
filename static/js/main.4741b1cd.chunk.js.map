{"version":3,"sources":["helpers/utils.ts","components/table.tsx","api/availablityapi.ts","api/axios.ts","styles/styles.ts","components/dropdown.tsx","components/copyright.tsx","components/App.tsx","index.tsx"],"names":["getDate","today","Date","String","padStart","getMonth","getFullYear","useRowStyles","makeStyles","root","borderBottom","StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","Slots","props","Table","size","aria-label","TableBody","sessions","map","session","component","scope","vaccine","min_age_limit","slots","slot","align","session_id","Age","ages","age","Typography","variant","gutterBottom","Vaccine","vaccines","x","SessionComponent","availableFirstDose","availableSecondDose","available_capacity_dose1","available_capacity_dose2","item","Ages","firstDoseText","secondDoseText","style","feeType","FilteredVaccine","filter","pos","indexOf","filteredAges","RemoveDuplicateNumbers","Row","prop","center","React","useState","open","setOpen","classes","Fragment","className","IconButton","onClick","name","fee_type","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","address","district_name","block_name","pincode","vaccine_fees","fee","CollapsibleTable","TableContainer","Paper","TableHead","fontWeight","centers","length","center_id","AvailablityCheck","district_id","date","get","url","axios","then","response","catch","error","alert","useStyles","formControl","spacing","minWidth","selectEmpty","marginTop","DistrictDropDown","FormControl","InputLabel","id","Select","labelId","value","district","onChange","event","setDistrict","target","label","MenuItem","Copyright","Link","href","App","isVisible","setVisiblity","Immutable","List","availableVaccine","setAvailablity","useEffect","AvailablityApi","data","setInterval","districtId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4741b1cd.chunk.js","sourcesContent":["export const getDate = () => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    var yyyy = today.getFullYear();\r\n    return  dd + '-' + mm + '-' + yyyy;\r\n};\r\n\r\nexport const RemoveDuplicateString = (item: string[]) => {\r\n    return item.filter(function(x: string, pos: number) {\r\n        return item.indexOf(x) === pos;\r\n    })\r\n}\r\n\r\nexport const RemoveDuplicateNumbers = (item: number[]) => {\r\n    return item.filter(function(x: number, pos: number) {\r\n        return item.indexOf(x) === pos;\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme, withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Center, Session, Slot, VaccineFees } from '../types/type';\r\nimport { RemoveDuplicateNumbers, RemoveDuplicateString } from '../helpers/utils';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\ninterface RowProps {\r\n  center: Center\r\n}\r\ninterface AgeProps {\r\n  ages: number[]\r\n}\r\ninterface VaccineProps {\r\n  vaccines: string[]\r\n}\r\ninterface SectionProps {\r\n  feeType?: string\r\n  sessions: any\r\n}\r\n\r\nconst Slots = (props: SectionProps) => {\r\n  return <Table size=\"small\" aria-label=\"purchases\">\r\n    <TableBody>\r\n      <TableRow key={props.sessions[0].session_id}>\r\n        {\r\n          props.sessions.map((session: Session) => {\r\n              return <div>\r\n                <TableCell component=\"th\" scope=\"row\">{session.vaccine + \" Age-\" +  session.min_age_limit}</TableCell>\r\n                {\r\n                  session.slots.map((slot: Slot) => {\r\n                    return <TableCell align=\"center\">{slot}</TableCell>\r\n                  })\r\n                }\r\n              </div>\r\n          })\r\n        }\r\n      </TableRow>\r\n    </TableBody>\r\n  </Table>\r\n}\r\n\r\nconst Age = (props: AgeProps) => {\r\n  return <TableCell align=\"center\">\r\n    {\r\n      props.ages.map((age: number) =>\r\n        <div>\r\n          <Typography align=\"center\" variant=\"body1\" gutterBottom component=\"span\">{age}</Typography>\r\n        </div>\r\n      )\r\n    }\r\n  </TableCell >\r\n}\r\n\r\nconst Vaccine = (props: VaccineProps) => {\r\n  return <TableCell align=\"center\">\r\n    {\r\n      props.vaccines.map((x: string) =>\r\n        <div>\r\n          <Typography align=\"center\" variant=\"body1\" gutterBottom component=\"span\">{x}</Typography>\r\n        </div>\r\n      )\r\n    }\r\n  </TableCell >\r\n}\r\n\r\nconst SessionComponent = (props: SectionProps) => {\r\n  let availableFirstDose = 0;\r\n  let availableSecondDose = 0;\r\n  props.sessions.map((x: Session) => availableFirstDose += x.available_capacity_dose1)\r\n  props.sessions.map((x: Session) => availableSecondDose += x.available_capacity_dose2)\r\n  let Ages = props.sessions.map((x: Session) => { return x.min_age_limit; })\r\n  let vaccines = props.sessions.map((x: Session) => { return x.vaccine; })\r\n  let firstDoseText = availableFirstDose > 0 ? availableFirstDose : \"\"\r\n  let secondDoseText = availableSecondDose > 0 ? availableSecondDose : \"\"\r\n  let style = props.feeType === \"Paid\" ? { color: 'red' } : {}\r\n  let FilteredVaccine = RemoveDuplicateString(vaccines)\r\n  let filteredAges = RemoveDuplicateNumbers(Ages)\r\n\r\n  return <>\r\n    <Age ages={filteredAges} />\r\n    <Vaccine vaccines={FilteredVaccine} />\r\n    <StyledTableCell align=\"center\">{firstDoseText}</StyledTableCell>\r\n    <StyledTableCell align=\"center\">{secondDoseText}</StyledTableCell>\r\n    <StyledTableCell align=\"center\" style={style}>{props.feeType}</StyledTableCell>\r\n  </>\r\n}\r\n\r\nconst Row = (prop: RowProps) => {\r\n  const { center } = prop;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (<React.Fragment>\r\n    <StyledTableRow className={classes.root}>\r\n      <StyledTableCell>\r\n        <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n          {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n        </IconButton>\r\n      </StyledTableCell>\r\n      <StyledTableCell component=\"th\" scope=\"row\">{center.name}</StyledTableCell>\r\n      <SessionComponent sessions={center.sessions} feeType={center.fee_type} />\r\n    </StyledTableRow>\r\n    <StyledTableRow>\r\n      <StyledTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n          <Box margin={1}>\r\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n              Location Details\r\n              </Typography>\r\n            <Typography variant=\"subtitle1\" gutterBottom component=\"span\">\r\n              {\r\n                center.address + \", \" +\r\n                center.district_name + \" District, \" +\r\n                center.block_name + \" Block, \" +\r\n                center.pincode\r\n              }\r\n            </Typography>\r\n            <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n              Available time slots\r\n              </Typography>\r\n            <Slots sessions={center.sessions} />\r\n            {\r\n              center.vaccine_fees ?\r\n                [\r\n                  <Typography variant=\"h5\" gutterBottom component=\"div\">\r\n                    Vaccine Price\r\n            </Typography>,\r\n                  center.vaccine_fees.map((vaccine: any) => {\r\n                    return <div>\r\n                      <Typography variant=\"subtitle1\" gutterBottom component=\"span\">\r\n                        {vaccine.vaccine + \" - \" + vaccine.fee}\r\n                      </Typography>\r\n                    </div>\r\n                  })\r\n                ]\r\n                : <></>\r\n            }\r\n          </Box>\r\n        </Collapse>\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  </React.Fragment>\r\n  );\r\n}\r\n\r\ninterface TableProps {\r\n  centers: any;\r\n}\r\nconst CollapsibleTable = (props: TableProps) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow style={{ backgroundColor: 'darkgrey' }}>\r\n            <TableCell />\r\n            <TableCell style={{ fontWeight: 'bolder' }}>Center Name</TableCell>\r\n            <TableCell align=\"center\" style={{ fontWeight: 'bolder' }}>Age</TableCell>\r\n            <TableCell align=\"center\" style={{ fontWeight: 'bolder' }}>Vaccine</TableCell>\r\n            <TableCell align=\"center\" style={{ fontWeight: 'bolder' }}>Available First Dose</TableCell>\r\n            <TableCell align=\"center\" style={{ fontWeight: 'bolder' }}>Available Second Dose </TableCell>\r\n            <TableCell align=\"center\" style={{ fontWeight: 'bolder' }}>Type</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            props.centers.length > 0 ?\r\n              props.centers.map((center: Center) => (<Row key={center.center_id} center={center} />)) :\r\n              <></>\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer >\r\n  );\r\n}\r\n\r\nexport default CollapsibleTable;","import Axios from \"./axios\";\r\n\r\nclass AvailablityApi extends Axios {\r\n\r\n    public AvailablityCheck = (district_id: number, date: string): any => {\r\n        return this.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict` +\r\n            `?district_id=${district_id}&date=${date}`)\r\n    }\r\n}\r\n\r\nexport default new AvailablityApi();","import axios from \"axios\";\r\n\r\nclass Axios {\r\n\r\n    protected get(url: string): any {\r\n        return axios.get(url)\r\n            .then((response: any) => response)\r\n            .catch((error: any) => {\r\n                alert(\"axios error\");\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport default Axios;","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 220,\r\n        },\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n    }),\r\n);","import { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport { useStyles } from '../styles/styles';\r\n\r\ninterface Props {\r\n    district: number;\r\n    setDistrict: (arg0: number) => void;\r\n}\r\n\r\nconst DistrictDropDown = (props: Props): JSX.Element => {\r\n    const classes = useStyles();\r\n    const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        props.setDistrict(event.target.value as number);\r\n    };\r\n\r\n    return (<FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Select your district</InputLabel>\r\n        <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            value={props.district}\r\n            onChange={handleChange}\r\n            label=\"Select your district\"\r\n        >\r\n            <MenuItem value={301}>Alappuzha</MenuItem>\r\n            <MenuItem value={307}>Ernakulam</MenuItem>\r\n            <MenuItem value={306}>Idukki</MenuItem>\r\n            <MenuItem value={297}>Kannur</MenuItem>\r\n            <MenuItem value={295}>Kasargod</MenuItem>\r\n            <MenuItem value={298}>Kollam</MenuItem>\r\n            <MenuItem value={305}>Kozhikode</MenuItem>\r\n            <MenuItem value={302}>Malappuram</MenuItem>\r\n            <MenuItem value={308}>Palakkad</MenuItem>\r\n            <MenuItem value={300}>Pathanamthitta</MenuItem>\r\n            <MenuItem value={296}>Trivandrum</MenuItem>\r\n            <MenuItem value={303}>Thrissur</MenuItem>\r\n            <MenuItem value={299}>Wayanad</MenuItem>\r\n        </Select>\r\n    </FormControl>)\r\n}\r\n\r\nexport default DistrictDropDown;","import { Link, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Copyright = (): JSX.Element => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"\">\r\n                owned by Lino Lazar\r\n        </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright;","import React, { useEffect, useState } from 'react';\nimport Table from './table';\nimport AvailablityApi from '../api/availablityapi';\nimport { Center } from '../types/type';\nimport { getDate } from '../helpers/utils';\nimport DistrictDropDown from './dropdown';\nimport Immutable from \"immutable\";\nimport Copyright from './copyright';\n\nconst App = () => {\n  const [isVisible, setVisiblity] = React.useState(false);\n  const [district, setDistrict] = React.useState(0);\n  const [availableVaccine, setAvailablity] = useState(Immutable.List<Center>())\n\n  useEffect(() => {\n    if (district > 0) {\n      AvailablityApi.AvailablityCheck(district, getDate()).then((response: any) =>\n      setAvailablity(response.data.centers))\n      setInterval(() => {\n        AvailablityApi.AvailablityCheck(district, getDate()).then((response: any) =>\n          setAvailablity(response.data.centers))\n      }, 120000)\n      setVisiblity(true)\n    }\n  }, [district])\n\n  const setSelectedDistrict = (districtId: number) => {\n    setDistrict(districtId);\n  };\n\n  return (<div className=\"container\">\n    <h1>Vaccine Availablity Checker</h1>\n    <DistrictDropDown district={district} setDistrict={setSelectedDistrict} />\n    {\n      district > 0 && isVisible ? <Table centers={availableVaccine} /> : <></>\n    }\n    <Copyright />\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}